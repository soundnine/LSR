<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</beans:bean> <!-- 서블릿 3.0이상 -->
	
	<beans:bean id="loginInterceptor" class="com.portfolio.commons.interceptor.LoginInterceptor">
	</beans:bean>
	
	<beans:bean id="authInterceptor" class="com.portfolio.commons.interceptor.AuthInterceptor">
	</beans:bean>
	
	<beans:bean id="channelInterceptor" class="com.portfolio.commons.interceptor.ChannelInterceptor">
	</beans:bean>
	
	<beans:bean id="loginAfterInterceptor" class="com.portfolio.commons.interceptor.LoginAfterInterceptor">
	</beans:bean>
	
	<beans:bean id="freeInterceptor" class="com.portfolio.commons.interceptor.FreeInterceptor">
	</beans:bean>
	
	<beans:bean id="webSocketHandler" class="com.portfolio.commons.socket.WebSocketHandler">
	</beans:bean>
	
	<websocket:handlers>
		<websocket:mapping handler="webSocketHandler" path="/socketUrl"/>
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
	</websocket:handlers>
	
	<interceptors>
		<interceptor>
			<mapping path="/loginPost"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
		
		<interceptor>
			<mapping path="/**"/>
			<exclude-mapping path="/resources/**"/>
			<exclude-mapping path="/login"/>
			<exclude-mapping path="/loginPost"/>
			<exclude-mapping path="/register"/>
			<exclude-mapping path="/404"/>
			<exclude-mapping path="/500"/>
			<beans:ref bean="authInterceptor"/>
		</interceptor>
		
		<interceptor>
			<mapping path="/channel/myChannel"/>
			<beans:ref bean="channelInterceptor"/>
		</interceptor>
		
		<interceptor>
			<mapping path="/login"/>
			<beans:ref bean="loginAfterInterceptor"/>		
		</interceptor>
		
		<interceptor>
			<mapping path="/free/getFreeBoard"/>
			<beans:ref bean="freeInterceptor"/>
		</interceptor>
	</interceptors>
	
	<context:component-scan base-package="com.portfolio.controller"/>
	
</beans:beans>
